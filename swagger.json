{
  "openapi": "3.0.0",
  "info": {
    "title": "API de Autenticação e Usuários",
    "version": "1.0.0",
    "description": "API para login, renovação de token JWT e gerenciamento de usuários.\n\n## Eventos em tempo real\n\nEste backend emite eventos via WebSocket (Socket.IO) sempre que um usuário é atualizado ou deletado.\n\n- Documentação dos eventos: consulte o arquivo `asyncapi.yaml` na raiz do projeto.\n- Visualize a documentação dos eventos em https://studio.asyncapi.com/\n- URL do servidor de eventos: `ws://localhost:3000`\n- Eventos emitidos:\n  - `userUpdated`: emitido quando um usuário é atualizado\n  - `userDeleted`: emitido quando um usuário é removido\n\nPara consumir os eventos, conecte-se ao servidor Socket.IO e escute pelos eventos acima."
  },
  "servers": [
    { "url": "http://177.136.250.30:3000", "description": "Servidor Externo" },
    { "url": "http://localhost:3000", "description": "Servidor Local" }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Login do usuário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" },
                    "refreshToken": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Credenciais inválidas" }
        }
      }
    },
    "/refresh": {
      "post": {
        "summary": "Renova o token JWT usando o refreshToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": { "type": "string" }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Novo token JWT gerado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Token inválido ou expirado" }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Lista todos os usuários (pode receber filtros via query)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "schema": { "type": "integer" },
            "description": "ID da empresa para filtrar usuários"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "401": { "description": "Token ausente ou inválido" }
        }
      },
      "post": {
        "summary": "Cria um novo usuário",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "Usuário criado" },
          "400": { "description": "Dados inválidos" }
        }
      }
    },
    "/users/list": {
      "get": {
        "summary": "Lista simplificada ou filtrada de usuários",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "schema": { "type": "integer" },
            "description": "ID da empresa para filtrar usuários"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista simplificada de usuários",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "401": { "description": "Token ausente ou inválido" }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Mostra detalhes de um usuário",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": { "description": "Usuário não encontrado" }
        }
      },
      "put": {
        "summary": "Atualiza um usuário existente",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": { "description": "Usuário atualizado" },
          "400": { "description": "Dados inválidos" },
          "404": { "description": "Usuário não encontrado" }
        }
      },
      "delete": {
        "summary": "Remove um usuário",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Usuário removido" },
          "404": { "description": "Usuário não encontrado" }
        }
      }
    },
    "/users/{userId}/media-upload": {
      "post": {
        "summary": "Upload de mídia para o usuário",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profileImage": {
                    "type": "array",
                    "items": { "type": "string", "format": "binary" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Upload realizado com sucesso" },
          "400": { "description": "Erro no upload" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "profile": { "type": "string" },
          "tokenVersion": { "type": "integer" },
          "companyId": { "type": "integer" },
          "super": { "type": "boolean" },
          "online": { "type": "boolean" },
          "endWork": { "type": "string" },
          "startWork": { "type": "string" },
          "color": { "type": ["string", "null"] },
          "farewellMessage": { "type": ["string", "null"] },
          "whatsappId": { "type": "integer" },
          "allTicket": { "type": "string" },
          "allowGroup": { "type": "boolean" },
          "defaultMenu": { "type": "string" },
          "defaultTheme": { "type": "string" },
          "profileImage": { "type": ["string", "null"] },
          "wpp": { "type": ["string", "null"] }
        }
      }
    }
  }
}
